{"version":3,"sources":["components/Statistics/Statistics.module.css","App.module.css","components/FeedBack/FeedBack.module.css","components/SectionTitle/SectionTitle.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/FeedBack/FeedBack.js","components/Statistics/Statistics.js","components/SectionTitle/SectionTitle.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","options","Component","Statistics","good","neutral","bad","total","positivePercentage","className","styles","title","list","item","SectionTitle","children","FeedbackOptions","this","props","onLeaveFeedback","map","option","button","onClick","Notification","message","App","state","addFeedback","setState","prevState","calculateTotalFeedback","Object","values","reduce","element","calculatePersentPositiveFeedback","totalFeedback","Math","round","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,2B,uBCA3FD,EAAOC,QAAU,CAAC,UAAY,yB,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,8B,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,8B,yJCEpBC,EAAU,CAAC,OAAQ,UAAW,O,GACbC,Y,eCcRC,EAfI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACI,oBAAIC,UAAWC,IAAOC,MAAtB,uBACA,qBAAIF,UAAWC,IAAOE,KAAtB,UACI,qBAAIH,UAAWC,IAAOG,KAAtB,oBAAoCT,KACpC,qBAAIK,UAAWC,IAAOG,KAAtB,uBAAuCR,KACvC,qBAAII,UAAWC,IAAOG,KAAtB,mBAAmCP,KACnC,qBAAIG,UAAWC,IAAOG,KAAtB,qBAAqCN,KACrC,qBAAIE,UAAWC,IAAOG,KAAtB,iCAAiDL,EAAjD,c,iBCADM,EATM,SAAC,GAAwB,EAAtBH,MAAuB,IAAhBI,EAAe,EAAfA,SAC3B,OACI,qCACI,oBAAIN,UAAWC,IAAOC,MAAtB,mCACCI,M,iBCcEC,E,4JAhBX,WAAU,IAAD,EACgCC,KAAKC,MAAlCjB,EADH,EACGA,QAASkB,EADZ,EACYA,gBACjB,OACI,mCACKlB,EAAQmB,KAAI,SAAAC,GAAM,OACf,wBAEIZ,UAAWC,IAAOY,OAClBC,QAAS,kBAAMJ,EAAgBE,IAHnC,SAIEA,GAHOA,Y,GAPCnB,a,iBCOfsB,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mCACI,oBAAIhB,UAAWC,IAAOC,MAAtB,SAA8Bc,OCGpCxB,EAAU,CAAC,OAAQ,UAAW,OAkCrByB,E,4MAhCbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPsB,YAAc,SAACP,GACb,EAAKQ,UAAS,SAACC,GACb,OAAO,eAAGT,EAASS,EAAUT,GAAU,O,EAG3CU,uBAAyB,WACvB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAAC3B,EAAO4B,GAAR,OAAoB5B,EAAS4B,IAAS,I,EAEhFC,iCAAmC,WACjC,IAAMC,EAAgB,EAAKN,yBAC3B,OAAOO,KAAKC,MAAM,EAAKZ,MAAMvB,KAAOiC,EAAgB,M,4CAEtD,WAAU,IAAD,EACwBpB,KAAKU,MAA5BvB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQU,KAAKc,yBACbvB,EAAqBS,KAAKmB,mCAChC,OACE,qBAAK3B,UAAWC,IAAO8B,UAAvB,SACE,eAAC,EAAD,CAAc7B,MAAM,wBAApB,UACE,cAAC,EAAD,CAAiBV,QAASA,EAASkB,gBAAiBF,KAAKW,cACxDrB,EAAQ,cAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,IAAyB,cAAC,EAAD,CAAciB,QAAQ,+B,GA1BtIvB,aCLlBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.69e70a7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3pjOo\",\"list\":\"Statistics_list___bOpb\",\"item\":\"Statistics_item__-dBQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16P6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedBack_button__3UXSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SectionTitle_title__11jkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1IK1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__17Goi\"};","import React, { Component } from 'react';\r\nimport styles from \"./FeedBack.module.css\"\r\n\r\nconst options = ['good', 'neutral', 'bad'];\r\nclass FeedBack extends Component {\r\n    state = {\r\n        good: 3,\r\n        neutral: 0,\r\n        bad: 3\r\n    };\r\n    addFeedback = (option) => {\r\n        this.setState((prevState) => {\r\n            return { [option]: prevState[option] + 1, };\r\n        })\r\n    }\r\n    calculateTotalFeedback = () => {\r\n        return Object.values(this.state).reduce((total, element) => total += element, 0);\r\n    }\r\n    calculatePersentPositiveFeedback = () => {\r\n        const totalFeedback = this.calculateTotalFeedback();\r\n        return Math.round(this.state.good / totalFeedback * 100);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Please leave Feedback</h2>\r\n                {options.map(option => (\r\n                    <button\r\n                        key={option}\r\n                        className={styles.button}\r\n                        onClick={() => this.addFeedback(option)}\r\n                    >{option}</button>\r\n                ))}\r\n                <h3>Statistic</h3>\r\n                <ul>\r\n                    <li>Good:{this.state.good}</li>\r\n                    <li>Neutral:{this.state.neutral}</li>\r\n                    <li>Bad:{this.state.bad}</li>\r\n                    <li>Total:{this.calculateTotalFeedback()}</li>\r\n                    <li>Positive Feedback:{this.calculatePersentPositiveFeedback()}%</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedBack;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css'\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <h3 className={styles.title}>Statistic</h3>\r\n            <ul className={styles.list}>\r\n                <li className={styles.item}>Good : {good}</li>\r\n                <li className={styles.item}>Neutral : {neutral}</li>\r\n                <li className={styles.item}>Bad : {bad}</li>\r\n                <li className={styles.item}>Total : {total}</li>\r\n                <li className={styles.item}>Positive Feedback : {positivePercentage}%</li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './SectionTitle.module.css'\r\nconst SectionTitle = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <h2 className={styles.title}>Please leave Feedback</h2>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SectionTitle;\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\nclass FeedbackOptions extends Component {\r\n    render() {\r\n        const { options, onLeaveFeedback } = this.props;\r\n        return (\r\n            <>\r\n                {options.map(option => (\r\n                    <button\r\n                        key={option}\r\n                        className={styles.button}\r\n                        onClick={() => onLeaveFeedback(option)}\r\n                    >{option}</button>\r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <>\r\n            <h3 className={styles.title}>{message}</h3>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport FeedBack from './components/FeedBack/FeedBack';\nimport Statistics from './components/Statistics/Statistics';\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification'\n\n\nconst options = ['good', 'neutral', 'bad'];\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  addFeedback = (option) => {\n    this.setState((prevState) => {\n      return { [option]: prevState[option] + 1, };\n    })\n  }\n  calculateTotalFeedback = () => {\n    return Object.values(this.state).reduce((total, element) => total += element, 0);\n  }\n  calculatePersentPositiveFeedback = () => {\n    const totalFeedback = this.calculateTotalFeedback();\n    return Math.round(this.state.good / totalFeedback * 100);\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.calculateTotalFeedback();\n    const positivePercentage = this.calculatePersentPositiveFeedback();\n    return (\n      <div className={styles.container}>\n        <SectionTitle title=\"Please leave Feedback\">\n          <FeedbackOptions options={options} onLeaveFeedback={this.addFeedback} />\n          {total ? <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} /> : <Notification message=\"No feedback given\" />}\n        </SectionTitle>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}